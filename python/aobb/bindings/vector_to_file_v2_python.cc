/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(vector_to_file_v2.h) */
/* BINDTOOL_HEADER_FILE_HASH(ee72aef15a5de1afa95c7fc377271ca3)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/aobb/vector_to_file_v2.h>


void bind_vector_to_file_v2_template(py::module& m, const char* classname)
{
    using vector_to_file_v2 = gr::aobb::vector_to_file_v2;

    py::class_<vector_to_file_v2,
               gr::sync_block,
               gr::block,
               gr::basic_block,
               std::shared_ptr<vector_to_file_v2>>(m, classname)
        .def(py::init(&vector_to_file_v2::make),
             py::arg("itemsize"),
             py::arg("filename"),
             py::arg("append") = false)


        .def("open", &vector_to_file_v2::open, py::arg("filename"))
        .def("set_unbuffered", &vector_to_file_v2::set_unbuffered, py::arg("unbuffered"))

        .def("close", &vector_to_file_v2::close)


        ;
}

void bind_vector_to_file_v2(py::module& m)
{
    bind_vector_to_file_v2_template(m, "vector_to_file_v2");
}
