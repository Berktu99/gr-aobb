id: aobb_vector_to_file_v2
label: Vector to File V2
flags: [python, cpp]

parameters:
  - id: file
    label: File
    dtype: file_open
  - id: type
    label: Input Type
    dtype: enum
    options: [float]
    option_attributes:
      size: [gr.sizeof_float]
    hide: part
  - id: vlen
    label: Vector Length
    dtype: int
    default: "1"
    hide: ${ 'part' if vlen == 1 else 'none' }
  - id: unbuffered
    label: Unbuffered
    dtype: bool
    default: "False"
    options: ["False", "True"]
    option_labels: ["Off", "On"]
  - id: append
    label: Append file
    dtype: bool
    default: "False"
    options: ["True", "False"]
    option_labels: [Append, Overwrite]

inputs:
  - domain: stream
    dtype: ${ type }
    vlen: ${ vlen }

asserts:
  - ${ vlen > 0 }

templates:
  imports: |-
    from gnuradio import aobb
    import pmt
  make: |-
    aobb.vector_to_file_v2(${type.size}*${vlen}, ${file}, ${append})
    self.${id}.set_unbuffered(${unbuffered})
  callbacks:
    - set_unbuffered(${unbuffered})
    - open(${file})

cpp_templates:
  includes: ["#include <gnuradio/aobb/vector_to_file_v2.h>"]
  declarations: "aobb::vector_to_file_v2::sptr ${id};"
  make: "this->${id} = aobb::vector_to_file_v2::make(${type.size}*${vlen}, ${file}, ${append});"
  callbacks:
    - open(${file})

file_format: 1
